# This is a basic workflow to help you get started with Actions

name: Deploy to fly
env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  FLY_REGION: ewr
  FLY_ORG: tbol

# Controls when the workflow will run
on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - "release"
  # update on run of Update Calendso nightly submodule update
  workflow_run:
    workflows: ["Update Calendso"]
    branches: [main]
    types:
      - completed
  # Allow running workflow manually from the Actions tab
  workflow_dispatch:
    # Uncomment below to allow specific version workflow run
    # inputs:
    #   version:
    #     description: 'Version to build'
    #     required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # Free about 4.5 GB, elminating our disk space issues
          tool-cache: true

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it, uncomment below
      # - name: Checkout code at specified version
      #   uses: actions/checkout@v2
      #   with:
      #     ref: ${{ github.event.inputs.version }}

      - name: checkout
        uses: actions/checkout@v4

      - name: Git submodule update
        run: |
          git submodule update --init

      - name: Fetch secrets from Infisical
        id: secret-fetcher
        shell: bash
        run: |
          delimiter="$(openssl rand -hex 8)"
          secrets=$(curl -s "https://aptford-infisical.fly.dev/api/v3/secrets/raw?environment=dev&secretPath=${{ secrets.INFISICAL_SECRET_PATH }}&workspaceId=${{ secrets.INFISICAL_WORKSPACE_ID }}" \
            --header "Authorization: Bearer ${{ secrets.INFISICAL_SERVICE_TOKEN }}" | jq -r '.secrets[] | "\(.secretKey)=\"\(.secretValue)\""')

          DATABASE_URL=$(echo "$secrets" | grep "DATABASE_URL=" | cut -d= -f2-)
          NEXTAUTH_SECRET=$(echo "$secrets" | grep "NEXTAUTH_SECRET=" | cut -d= -f2-)
          CALENDSO_ENCRYPTION_KEY=$(echo "$secrets" | grep "CALENDSO_ENCRYPTION_KEY=" | cut -d= -f2-)

          echo "DATABASE_URL=$DATABASE_URL" >> "$GITHUB_OUTPUT"
          echo "NEXTAUTH_SECRET=$NEXTAUTH_SECRET" >> "$GITHUB_OUTPUT"
          echo "CALENDSO_ENCRYPTION_KEY=$CALENDSO_ENCRYPTION_KEY" >> "$GITHUB_OUTPUT"

      - name: flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly
        run: |
          flyctl deploy --build-arg DATABASE_URL=${{ steps.secret-fetcher.outputs.DATABASE_URL }} \
                        --build-arg NEXTAUTH_SECRET=${{ steps.secret-fetcher.outputs.NEXTAUTH_SECRET }} \
                        --build-arg CALENDSO_ENCRYPTION_KEY=${{ steps.secret-fetcher.outputs.CALENDSO_ENCRYPTION_KEY }}
